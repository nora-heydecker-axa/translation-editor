import Head from "next/head";
import localFont from "next/font/local";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";
import Translations from "@/components/translations";
import { stripProject } from "@/util/strip";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export default function Home() {
  const [projects, setProjects] = useState<string[] | undefined>(undefined);
  const [selected, setSelected] = useState<string | undefined>(undefined);

  useEffect(() => {
    fetch("/api/projects")
      .then((resp) => resp.json())
      .then(setProjects);
  }, []);

  return (
    <>
      <Head>
        <title>Translation editor</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className={`${styles.page} ${geistSans.variable} ${geistMono.variable}`}
      >
        <header>
          <h1>translation editor</h1>
        </header>
        <div
          style={{
            display: "flex",
            flexDirection: "row",
            justifyContent: "center",
            width: "100%",
          }}
        >
          <aside
            style={{
              maxWidth: "170px",
            }}
          >
            {projects ? (
              <ul>
                {projects.map((proj) => (
                  <li
                    key={proj}
                    style={{ cursor: "pointer" }}
                    onClick={() => setSelected(proj)}
                  >
                    {stripProject(proj)}
                  </li>
                ))}
              </ul>
            ) : (
              <div>loading...</div>
            )}
          </aside>
          <main className={styles.main}>
            <div>
              {selected && (
                <>
                  <Translations path={selected} />
                </>
              )}
            </div>
          </main>
        </div>
      </div>
    </>
  );
}
